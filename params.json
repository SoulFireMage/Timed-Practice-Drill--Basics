{"name":"Timed-practice-drill--basics","tagline":"A quick solo test: first commit is the code at 45 mins including generating test data internally. Goal, demonstrate a very simple object heirarchy and utilize them according to specs in the shorttest time. Initial commit has no testing and commentary added during the time allowed.","body":"# Simple Timed Drill\r\n\r\nThis type of practice (which will get updated using the same philosophy!) is nothing more than a challenge set to practice basics. Others use the term kata perhaps but to me, this is just the equivalent of piano scales.\r\n\r\nA description of the challenge at time of first commit is below - it was meant to be 30mins:\r\n\r\nA quick solo test: first commit is the code at 45 mins including generating test data internally. Goal, demonstrate a very simple object heirarchy and utilize them according to specs in the shorttest time. Initial commit has no testing and commentary added during the time allowed.\r\n\r\nGoals:\r\n\r\n* Build the appropriate Xaml by hand in the code editor to display the data and provide the filter buttons/textboxes\r\n* Construct a country/city/people hierarchy in a simple way but use appropriate data structures and property access\r\n* Attempt to build the code such that on first run there were no exceptions and the data displayed as predicted (success)\r\n* Expand with further drills relating to events and LINQ filtering (Commit 2)\r\n\r\nNo databinding is used in this drill.\r\n\r\nWhy have drills like this? \r\n\r\nDrills like this are the real equivalent of practicing scales on a piano.\r\nPuzzles are the equivalent of practicing pieces of music or even composing new pieces. Note, puzzles themselves, if you are not an experienced coder, can easily set the practice bar too high in the early stages - when in reality what is required first is fluidity of coding and syntax. Once this is easy, there is a level of confidence that makes puzzles far more useful and interesting. It's no good trying to crack a puzzle that needs recursion and dynamic programming if setting up a dictionary or list then writing the function itself is an exercise in google-fu!\r\n\r\nSet drills of this type are about basic conceptual and syntactical work in a given language; in my case designed to overcome what I call syntax blindness under pressure. *This type of syntax blindness, blank mind in an interview situation has always been my achilles heel, hence deliberate training drills like this. I strongly recommend that others going for their first or even second dev role who perhaps have the same issue in interview circumstances take a similar approach.*\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}